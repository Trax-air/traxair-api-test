# Example YAML to get you started quickly.
# Be aware that YAML has indentation based scoping.
# Code completion support is available so start typing for available options.
swagger: '2.0'

# This is your document metadata
info:
  version: "0.1.0"
  title: TraxAir Test API

host: api.trax-air.com

basePath: /v1

consumes: 
  - application/json

produces: 
  - application/json

# Describe your paths here
paths:
  # This is a path endpoint. Change it.
  /track:
    # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Gets the `Track` objects that you created.
      operationId: listTracks
      # This is array of GET operation parameters:
      parameters:
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
        
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            title: ArrayOfTracks
            type: array
            items:
              $ref: '#/definitions/Track'
    post:
      description: Creates a new track.
      operationId: addTrack
      parameters:
        - name: track
          in: body
          description: Track to add
          required: true
          schema:
            $ref: '#/definitions/Track'
      responses:
        '201':
          description: Track creation was successful
          schema:
            $ref: '#/definitions/Track'
  /track/{trackId}:
    get:
      description: |
        Gets the `Track` objects that you created.
      operationId: getTrack
      parameters:
        - name: trackId
          in: path
          description: The id of the track identification to retrieve
          type: string
        
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            $ref: '#/definitions/Track'
  /identify/tracklist/{identificationId}:
    get:
      description: Compute a tracklist from an URL.
      operationId: getTracklistIdentification
      parameters:
        - name: identificationId
          in: path
          description: The id of the tracklist identification to retrieve
          type: string
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/TracklistIdentification'
  /identify/tracklist/{identificationId}/rerun:
    post:
      description: Rerun a tracklist identification.
      operationId: rerunTracklistIdentification
      parameters:
        - name: identificationId
          in: path
          description: The id of the track identification to retrieve
          type: string
        - name: rerunParams
          in: body
          description: Describes what parts of the file to rerun
          required: true
          schema:
            $ref: '#/definitions/RerunParams'
      responses:
        '201':
          description: Successful
          schema:
            $ref: '#/definitions/RerunParams'
  /identify/tracklist/{identificationId}/metadata:
    put:
      description: Modify the metadata for a tracklist identification
      operationId: changeTracklistIdentificationMetadata
      parameters:
        - name: identificationId
          in: path
          description: The id of the tracklist identification
          type: string
        - name: metadata
          in: body
          description: The metadata to change
          schema:
            $ref: '#/definitions/MetadataIdentification'
      responses:
        '204':
          description: Successfully updated
        '405':
          description: Invalid input
  /identify/tracklist/url:
    post:
      description: Identify a tracklist from an URL.
      operationId: identifyTracklistFromUrl
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: url
          in: formData
          description: URL to analyze
          required: true
          type: string
      responses:
        '201':
          description: Tracklist identification request creation was successful
          schema:
            $ref: '#/definitions/TracklistIdentification'
  /identify/tracklist/file:
    post:
      description: Identify a tracklist from an uploaded file.
      operationId: identifyTracklistFromFile
      consumes:
        - multipart/form-data
      parameters:
        - name: file
          in: formData
          description: File to upload and analyze
          required: true
          type: file
      responses:
        '201':
          description: Tracklist identification request creation was successful
          schema:
            $ref: '#/definitions/TracklistIdentification'
  /identify/track/{identificationId}:
    get:
      description: Get a track identification.
      operationId: getTrackIdentification
      parameters:
        - name: identificationId
          in: path
          description: The id of the track identification to retrieve
          type: string
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/TrackIdentification'
  /identify/track/{identificationId}/rerun:
    post:
      description: Rerun a track identification.
      operationId: rerunTrackIdentification
      parameters:
        - name: identificationId
          in: path
          description: The id of the track identification to retrieve
          type: string
      responses:
        '201':
          description: Successful
          schema:
            $ref: '#/definitions/TrackIdentification'
  /identify/track/{identificationId}/metadata:
    put:
      description: Modify the metadata for a track identification
      operationId: changeTrackIdentificationMetadata
      parameters:
        - name: identificationId
          in: path
          description: The id of the track identification
          type: string
        - name: metadata
          in: body
          description: The metadata to change
          schema:
            $ref: '#/definitions/MetadataIdentification'
      responses:
        '204':
          description: Successfully updated
        '405':
          description: Invalid input
  /identify/track/url:
    post:
      description: Identify a track from an URL.
      operationId: identifyTrackFromUrl
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: url
          in: formData
          description: URL to analyze
          required: true
          type: string
      responses:
        '201':
          description: Track identification creation was successful
          schema:
            $ref: '#/definitions/Track'
  /identify/track/file:
    post:
      description: Identify a track from an uploaded file.
      operationId: identifyTrackFromFile
      consumes:
        - multipart/form-data
      parameters:
        - name: file
          in: formData
          description: File to upload and analyze
          required: true
          type: file
      responses:
        '201':
          description: Trackl identification request creation was successful
          schema:
            $ref: '#/definitions/TrackIdentification'
  /me/billing:
    get:
      description: Returns the current and past billing information.
      operationId: myBills
      responses:
        '200':
          description: Successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Bills'
  /me/callbacks:
    get:
      description: Returns the callbacks that you set up to be notified of changes in tracklist or track identification, or track territory.
      operationId: myCallbacks
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/Callbacks'
    put:
      description: Update your callbacks
      operationId: changeCallbacks
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - in: formData
          name: callbackTrackIdentification
          description: Update callbackTrackIdentification
          type: string
        - in: formData
          name: callbackTracklistIdentification
          description: Update callbackTracklistIdentification
          type: string
        - in: formData
          name: callbackTrackTerritoryChange
          description: Update callbackTrackTerritoryChange
          type: string
      responses:
        '204':
          description: Successfully updated
        '405':
          description: Invalid input


definitions:
  MetadataIdentification:
    title: MetadataIdentification
    type: object
    properties:
      sourceUrl:
        type: string
        format: url
      curator:
        type: string
      territoryCode:
        type: string
      latitude:
        type: string
      longitude:
        type: string
      genre:
        type: string
      # radio stream, live, podcast
      type:
        type: string
      source:
        type: string
      date:
        type: string
        format: date
      additionalData:
        type: string
  TracklistIdentification:
    title: TracklistIdentification
    type: object
    properties:
      id:
        type: string
        readOnly: true
      metadata:
        $ref: '#/definitions/MetadataIdentification'
      identifications:
        type: array
        items:
          type: object
          properties:
            date:
              type: string
              format: date-time
            done:
              type: boolean
            tracklist:
              $ref: '#/definitions/Tracklist'
  RerunParams:
    title: RerunParams
    type: array
    items:
      type: object
      properties:
        start:
          type: integer
          min: 0
        end:
          type: integer
          min: 0
  Tracklist:
    title: Tracklist
    type: object
    properties:
      id:
        type: string
        readOnly: true
      segments:
        type: array
        items:
          type: object
          properties:
            track:
              $ref: '#/definitions/Track'
            start:
              type: integer
              min: 0
            end:
              type: integer
              min: 0
    
  TrackIdentification:
    title: TrackIdentification
    type: object
    properties:
      id:
        type: string
        readOnly: true
      metadata:
        $ref: '#/definitions/MetadataIdentification'
      identifications:
        type: array
        items:
          $ref: '#/definitions/Track'
  Track:
    title: Track
    type: object
    properties:
      id:
        type: string
        readOnly: true
      ISRC:
        type: string
        readOnly: true
      title:
        type: string
      genre:
        type: string
      artists:
        type: array
        items:
          $ref: '#/definitions/Artist'
      release:
        $ref: '#/definitions/Release'
      UPC:
        type: string
      duration:
        type: integer
      territory:
        type: string
      releaseDate:
        type: string
        format: date
  Artist:
    title: Artist
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      role:
        # Main or remixer
        type: string
  Release:
    title: Release
    type: object
    properties:
      id:
        type: string
      title:
        type: string
      label:
        type: string
      publisher:
        type: string
      cover:
        type: string
        format: url
  Callbacks:
    title: Callbacks
    type: object
    properties:
      callbackTrackIdentification:
        type: string
        format: url
      callbackTracklistIdentification:
        type: string
        format: url
      callbackTrackTerritoryChange:
        type: string
        format: url
  Bills:
    title: Bills
    type: object
    properties:
      date:
        type: string
        format: date
      hoursAnalyzed:
        type: integer
      price:
        type: number
